'use strict';
/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
*/

function *fib(n) {
    if(!n instanceof Number) return 0;
    yield 0;
    //if(n > 0) yield 1;
    let last = 0;
    let next = 1;
    for(let i = 1; i < n; i++) {
        [last, next] = [next, last + next];
        yield next;
    }
}

const range = (generator, stop = i => false, filter = i => false) => {
    const result = [];
    for(let v of generator) {
        console.log(v);
        if(stop(v)) return result;
        if(filter(v)) break;
        result.push(v);
    }
    return result; /* console.log("new fib: ", nr); while(stop(nr)) {
        if(filter(nr)) { result.push(nr); console.log(nr); }
        nr = generator.next();
    }
    return result;
    */
}

const isEven = i => (i instanceof Number) ? i % 2 === 0 : false;

const isLessThan = (max = 10) => i => (i) => (i instanceof Number) ? i < max : false;
/*
const result = range(fib(100), isLessThan(4000000), isEven)
                .reduce((previous, current) => previous + current);
console.log(result);
*/
const gen = fib(100);

for(let v of gen)
    console.log(v);
