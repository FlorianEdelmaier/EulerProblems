/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
*/

var fibonacciRecursive = function(n) {
    'use strict';
    if(n <= 1) return n;
    else return fibonacciRecursive(n - 1) + fibonacciRecursive(n - 2);
}

var finbonacciSequential = function(n) {
    'use strict';
    if (!i instanceof Number) return 0;
    if (n <= 1) return n;
    var a = 0,
        b = 1,
        c = 0,
        i = 0;
    for (i; i < n; i++) {
        c = a + b;
        a = b;
        b = c;
    }
    return a;
}

var range = function(generator, stop) {
    'use strict';
    var result = [];
    var i = 1;

    var generator = generator || function(i) { return i; };
    var stop = stop || function(i) { return false };

    var nr = generator(i);
     
    while(stop(nr)) {
        result.push(nr);
        nr = generator(i += 1);
    }
    return result;
}

var isEven = function(i) {
    'use strict';
    if (!i instanceof Number) return false;
    return i % 2 === 0;
}

var isLessThan4000000 = function(i) {
    'use strict';
    if (!i instanceof Number) return false;
    return i < 4000000;
}

var result = range(finbonacciSequential, isLessThan4000000)
            .filter(isEven)
            .reduce(function(previous, current) { return previous + current; });
console.log(result);
